#!/usr/bin/env python

# Copyright 2018 UW-APL
# See LICENSE

"""The Python implementation of the GRPC frame.Controller client."""

from __future__ import print_function

import grpc
import time

import frame_controller.frame_controller_pb2 as frame_api
import frame_controller.frame_controller_pb2_grpc as frame_grpc


def run():
    channel = grpc.insecure_channel('localhost:50051')
    stub = frame_grpc.FrameControllerStub(channel)

    dur = 1

    print("Sending motor velocity")
    request = frame_api.SetVelocityRequest()
    request.axes = frame_api.AXIS_YAW
    request.motors = frame_api.CONT_BOTH
    request.duty_cycle = -1.0
    response = stub.SetVelocity(request)
    print("Got this response: %s" % response)
    time.sleep(dur)

    print("Sending stop all")
    response = stub.StopAll(frame_api.StopAllRequest())
    print("Got this response: %s" % response)


if __name__ == '__main__':
    run()
